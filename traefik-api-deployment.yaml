---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-restx-api-deployment
  namespace: neo4j
spec:
  replicas: 3
  selector:
    matchLabels:
      app: flask-restx-api
  template:
    metadata:
      labels:
        app: flask-restx-api
    spec:
      containers:
      - name: flask-restx-api
        image: registry.digitalocean.com/notello/api-dev:v1.23
        ports:
        - containerPort: 8080
        env:
        - name: FLASK_ENV
          value: "production"
        - name: K8s_VER
          value: "1.23"
        - name: ENV_TYPE
          value: "prod"
        - name: NEO4J_URI
          value: "neo4j://my-neo4j-release:7687"
        - name: NEO4J_USERNAME
          valueFrom:
            secretKeyRef:
              name: neo4j-secrets
              key: username
        - name: NEO4J_PASSWORD
          valueFrom:
            secretKeyRef:
              name: neo4j-secrets
              key: password
        - name: NEO4J_DATABASE
          value: "neo4j"
        - name: SUPABASE_URL
          valueFrom:
            secretKeyRef:
              name: supabase-secrets
              key: url
        - name: SUPABASE_SERVICE_KEY
          valueFrom:
            secretKeyRef:
              name: supabase-secrets
              key: service-key
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: api-keys
              key: openai
        - name: GROQ_KEY
          valueFrom:
            secretKeyRef:
              name: api-keys
              key: groq
        - name: RUNPOD_WHISPER_ENDPOINT_ID
          value: "amyg6f231rop31"
        - name: RUNPOD_API_KEY
          valueFrom:
            secretKeyRef:
              name: api-keys
              key: runpod
      imagePullSecrets:
      - name: registry-notello
---
apiVersion: v1
kind: Service
metadata:
  name: flask-restx-api-service
  namespace: neo4j
spec:
  selector:
    app: flask-restx-api
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: ClusterIP
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: flask-restx-api-ingress
  namespace: neo4j
spec:
  entryPoints:
    - web
  routes:
    - match: Host(`api.notello.dev`)
      kind: Rule
      services:
        - name: flask-restx-api-service
          port: 80